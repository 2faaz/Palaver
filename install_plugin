#!/usr/bin/env python
# This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
import argparse, shutil, os, tarfile
parser = argparse.ArgumentParser(description='Install and remove Plugins.')
parser.add_argument('-i', metavar='file', type=str,help='Install a plugin - plugin .sp or .info file',default="")
parser.add_argument('-r', metavar='plugin', type=str,help='Remove the specified plugin',default="")
parser.add_argument('-info', metavar='plugin', type=str,help='Display info on a plugin',default="")
parser.add_argument('-l', dest='listPlugins', action='store_true',default=False,help='List the installed plugins')
args = parser.parse_args()
listPlugins = args.listPlugins
root = ''.join([e+'/' for e in os.path.realpath(__file__).split('/')[0:-1]])
if listPlugins == True:
	try:
		pluginList = open(root+'plugins')
	except:
		print "Plugins Library Not Found"
	print "Plugins:"
	for line in pluginList:
		name,version,author,cmdfile,dictionaries,actions = line.split('|||')
		print "\t"+name,"-",version
		actions = eval(actions)
		for each in actions:
			print "\t\t"+each[0]+"\t\t"+each[1].replace('\n','')
elif args.info != '':
	try:
		pluginList = open(root+'plugins')
	except:
		print "Plugins Library Not Found"
	for line in pluginList:
		name,version,author,cmdfile,dictionaries,actions = line.split('|||')
		if name == args.info:
			print name
			print "\tAuthor:",author
			print "\tVersion:",version
			print "\tCommand(s):",str(cmdfile)
			print "\tDictionaries:",str(dictionaries)
			print "\tActions:"
			actions = eval(actions)
			for each in actions:
				print "\t\t"+each[0]+"\t\t"+each[1].replace('\n','')
			print "\tCommands:"
			dictionary = open(root+'Recognition/modes/main.dic')
			adding = False
			for line in dictionary:
				if adding == False:
					add = False
					if line.startswith('#PLUGIN: '):
						if line.replace('#PLUGIN: ','').replace('\n','') == args.info:
							add = False
							adding = True
				else:
					add = True
					if line == "#END\n":
						adding = False
						add = False
				if add == True:
					print "\t\t"+line.replace('\n','')
			dictionary.close()
elif args.i != '':
	filename = args.i
	try:
		pluginList = open(root+'plugins')
	except:
		print "Plugins Library Not Found"
	plugins = {}
	for line in pluginList:
		name,version,author,cmdfile,dictionaries,actions = line.split('|||')
		plugins[name] = [float(version),eval(cmdfile)]
	if filename.endswith('.sp'):
		tar = tarfile.open(mode='r:gz',fileobj=file(filename))
		data = tar.extractfile('plugin.info')
	else:
		try:
			data = open(filename)
		except:
			print 'Invalid File - not found'
	recActions = False
	actions = []
	depend = []
	dictionaries = []
	description = ''
	for line in data:
		if recActions == True:
			if line != '':
				actions.append(line.replace('\n','').split(',',1))
		elif line.startswith("name"):
			name = line.replace('name =','').replace(' ','').replace('\n','')
			multiDesc = False
		elif line.startswith("version"):
			version = float(line.replace('version =','').replace(' ','').replace('\n',''))
			multiDesc = False
		elif line.startswith("description"):
			multiDesc = True
		elif line.startswith('dictionaries'):
			dictionaries = line.replace('dictionaries =','').replace(' ','').replace('\n','')
			try:
				dictionaries = dictionaries.split(',')
			except:
				dictionaries = [dictionaries]
		elif line.startswith("file"):
			cmdfile = line.replace('file =','').replace(' ','').replace('\n','')
			try:
				cmdfile = cmdfile.split(",")
			except:
				cmdfile = [cmdfile]
			multiDesc = False
		elif line.startswith("author"):
			author = line.replace("author =",'').replace('\n','')
			multiDesc = False
		elif line.startswith("dependencies"):
			depend = line.replace("dependencies = ",'').replace('\n','')
			multiDesc = False
			try:
				depend = depend.split(" ")
			except:
				depend = [depend]
		elif line.startswith("actions"):
			recActions = True
			multiDesc = False
		if multiDesc == True:
			description = description + line.replace('description =','').replace('\n','')
	data.close()
	install = True
	try:
		currentVersion = plugins[name][0]
		if currentVersion > version:
			print "A newer version is already installed"
		elif currentVersion == version:
			print "This version is already installed"
		else:
			print "Updating Files Has Not Yet Been Added, please remove the old version with -r and then install again"
			#Install Files
	except:
		for each in plugins:
			for exe in plugins[each][1]:
				if exe in cmdfile and exe != 'NONE' and len(plugins[each][1]) != 1 and install == True:
					print "This plugin has a conflict with",each
					print "Please rename the executable"
					install = False
		if install != False:
			print name
			print
			print description
			if len(depend) != 0:
				print "WARNING: THIS PLUGIN REQUIRES:"
				for each in depend:
					print each,
				print
			print
			if raw_input("Are you sure you want to continue? [Y/N]").lower() == 'y':
				try:
					dictionary = open(root+'Recognition/modes/main.dic')
					text = dictionary.read()
					dictionary.close()
					if filename.endswith('.sp'):
						command = tar.extractfile('actions.dic').read()
					else:
						data = open(''.join([e+'/' for e in args.i.split('/')[0:-1]]) + 'actions.dic')
						command = data.read()
						data.close()
					try:
						dictionary = open(root+'Recognition/modes/main.dic','w')
						dictionary.write("#PLUGIN: "+name+"\n")
						dictionary.write(command)
						dictionary.write("#END\n")
						dictionary.write(text)
					except:
						print "Error Installing Plugin In main.dic"
					dictionary.close()
				except:
					print "Dictionary Not Found"
				if filename.endswith('.sp'):
					try:
						for dic in dictionaries:
							binfile = open(root+"Recognition/modes/"+dic,'w')
							binfile.write(tar.extractfile(dic).read())
							binfile.close()
							print "File Installed to modes",dic
					except:
						print "Error Installing to modes",dic
				else:
					src = ''.join([e+'/' for e in filename.split('/')[0:-1]])
					try:
						for dic in dictionaries:
							shutil.copy(src+exe,root+"Recognition/modes/")
						print "File Installed to Bin",dic
					except:
						print "Error Moving File",dic
				if cmdfile != "NONE":
					if filename.endswith('.sp'):
						try:
							for exe in cmdfile:
								binfile = open(root+"Recognition/bin/"+exe,'w')
								binfile.write(tar.extractfile(exe).read())
								binfile.close()
								print "File Installed to Bin",exe
						except:
							print "Error Installing to Bin",exe
					else:
						src = ''.join([e+'/' for e in filename.split('/')[0:-1]])
						try:
							for exe in cmdfile:
								shutil.copy(src+exe,root+"Recognition/bin/")
							print "File Installed to Bin",exe
						except:
							print "Error Moving File"
					for exe in cmdfile:
						os.system("chmod +x "+root+"Recognition/bin/"+exe)
				try:
					pluginList = open(root+'plugins','a')
				except:
					print "Plugins Library Not Found"
				pluginList.write(name+"|||"+str(version)+"|||"+author+"|||"+str(cmdfile)+"|||"+str(dictionaries)+"|||"+str(actions)+"\n")
				print "Installed Plugin"
			else:
				print "Quiting Installation"
elif args.r != '':
	pluginName = args.r
	try:
		pluginList = open(root+'plugins')
	except:
		print "Plugins Library Not Found"
	good = False
	try:
		dictionary = open(root+'Recognition/modes/main.dic')
		text = ""
		deleting = False
		for line in dictionary:
			if deleting == False:
				add = True
				if line.startswith('#PLUGIN: '):
					if line.replace('#PLUGIN: ','').replace('\n','') == pluginName:
						add = False
						deleting = True
			else:
				add = False
				if line == "#END\n":
					deleting = False
			if add == True:
				text = text + line
		dictionary.close()
		try:
			dictionary = open(root+'Recognition/modes/main.dic','w')
			dictionary.write(text)
		except:
			print "Error Installing Plugin In main.dic"
		dictionary.close()
	except:
		print "Dictionary Not Found"
	text = ""
	found = False
	for line in pluginList:
		name,version,author,cmdfile,dictionaries,actions = line.split('|||')
		cmdfile = eval(cmdfile)
		dictionaries = eval(dictionaries)
		if name == pluginName:
			good = True
			if cmdfile[0] != "NONE":
				for exe in cmdfile:
					os.remove(root+"Recognition/bin/"+exe)
					print "Removed from Bin",exe
			for dic in dictionaries:
					os.remove(root+"Recognition/modes/"+dic)
					print 'Removed from Modes',dic
			print name,"Uninstalled"
			found = True
		else:
			text = text + line
	pluginList.close()
	try:
		pluginList = open(root+'plugins','w')
	except:
		print "Plugins Library Not Found"
	pluginList.write(text)
	pluginList.close()
	if found == False:
		print "Plugin Not Installed"
else:
	print "No Action Supplied"
